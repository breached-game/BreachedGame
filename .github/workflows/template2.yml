name: Test Build and Deploy

on:
  push:
    #  pull_request:
    branches:
      - dev

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
  SSH_KEY: ${{secrets.SSH_KEY}}

jobs:
#   testRunner:
#     name: Test in ${{ matrix.testMode }}
#     runs-on: ubuntu-latest
#     strategy:
#       fail-fast: false
#       matrix:
#         testMode:
#           - EditMode
#           - PlayMode
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v2
# 
#       - name: Create LFS file list
#         run: git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id
# 
#       - name: Restore LFS cache
#         uses: actions/cache@v2
#         id: lfs-cache
#         with:
#           path: .git/lfs
#           key: ${{ runner.os }}-lfs-${{ hashFiles('.lfs-assets-id') }}
# 
#       - name: Git LFS Pull
#         run: |
#           git lfs pull
#           git add .
#           git reset --hard
#       - name: Restore Library cache
#         uses: actions/cache@v2
#         with:
#           path: Library
#           key: Library-test-project-${{ matrix.targetPlatform }}
#           restore-keys: |
#             Library-test-project-
#             Library-
#       - uses: game-ci/unity-test-runner@v2.0-alpha-5
#         id: testRunner
#         with:
#           testMode: ${{ matrix.testMode }}
#           checkName: ${{ matrix.testMode }} test results
#           githubToken: ${{ secrets.GITHUB_TOKEN }}
# 
#       - uses: actions/upload-artifact@v2
#         with:
#           name: Test results (${{ matrix.testMode }})
#           path: ${{ steps.testRunner.outputs.artifactsPath }}

  DeployServer:
    # needs: testRunner
    runs-on: ubuntu-latest
    steps:
     - name: checkout code
       uses: actions/checkout@v1
     
     - name: ssh into code
       uses: appleboy/ssh-action@master
       with:
          host: 34.142.71.62
          username: danielsavidge
          key: ${{ secrets.SSH_KEY }}
          script: |
            
            cd /home/andrewdmorgan_2/
            cd BreachedGame
            sudo git checkout dev
            sudo git pull
            sudo systemctl stop breached-server.service
            sudo cp ./Builds/Linux/Server/Server.x86_64 /home/andrewdmorgan_2/Server
            sudo systemctl start breached-server.service
